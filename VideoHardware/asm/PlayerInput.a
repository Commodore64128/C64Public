!zn

AllocatePlayer
	; Allocate and remember the player index
	ldy #kAnimationType_playerRunLeft
	jsr AnimationEngine_Allocate
	lda #120
	sta AnimationEngine_posX,x
	lda #128
	sta AnimationEngine_posY,x
	lda #kAnimationEngine_flipX
	sta AnimationEngine_flips,x
	stx playerAnimationIndex
	rts

; For wrap around screen position testing, these numbers may look a bit odd, but they are the result of a 256 wide sprite scan line
kScreenSpriteOffScreen_right	= 243
kScreenSpriteOffScreen_left		= 244

!macro MoveAnimationsForBy .animationPos , .by {
	; Update position for all other sprites except the player
	ldx #kAnimationEngine_maxSlots-1
.l1
	cpx playerAnimationIndex
	beq .nl1
	lda AnimationEngine_frameHi,x
	beq .nl1
	lda .animationPos,x
!if .by < 0 {
	sec
	sbc #1
	!if .animationPos = AnimationEngine_posX {
		cmp #kScreenSpriteOffScreen_left
		bne .il1
	} else {
		bcs .il1
	}
} else {
	clc
	adc #1
	!if .animationPos = AnimationEngine_posX {
		cmp #kScreenSpriteOffScreen_right
		bne .il1
	} else {
		bcc .il1
	}
}
	; Delete it
	lda #0
	sta AnimationEngine_frameHi,x
	sta AnimationEngine_framesPositionHi,x
	jmp .nl1
.il1
	sta .animationPos,x
.nl1
	dex
	bpl .l1
}

!macro TilesCloudsDec .val , .mode7 , .tiles {
	lda .mode7+0
	sec
	sbc #<.val
	sta .mode7+0
	lda .mode7+1
	sbc #>.val
	sta .mode7+1
	lda .mode7+2
	sbc #0
	sta .mode7+2

	dec .tiles
	lda .tiles
	cmp #$ff
	bne .o1
	dec .tiles+1
.o1
}

!macro TilesCloudsInc .val , .mode7 , .tiles {
	lda .mode7
	clc
	adc #<.val
	sta .mode7
	lda .mode7+1
	adc #>.val
	sta .mode7+1
	lda .mode7+2
	adc #0
	sta .mode7+2

	inc .tiles
	bne .o1
	inc .tiles+1
.o1
}

!macro CloudsDec .val , .mode7 {
	lda .mode7+0
	sec
	sbc #<.val
	sta .mode7+0
	lda .mode7+1
	sbc #>.val
	sta .mode7+1
	lda .mode7+2
	sbc #0
	sta .mode7+2
}

!macro CloudsInc .val , .mode7 {
	lda .mode7
	clc
	adc #<.val
	sta .mode7
	lda .mode7+1
	adc #>.val
	sta .mode7+1
	lda .mode7+2
	adc #0
	sta .mode7+2
}

!zn
playerAnimationIndex !by 0
HandleJoystick

	lda #JoystickBits_Up
	bit CIA1KeyboardColumnJoystickA
	beq .isUp
	jmp .notUp
.isUp

	+MoveAnimationsForBy AnimationEngine_posY , -1

	ldx playerAnimationIndex
	ldy #kAnimationType_playerRunUp
	jsr AnimationEngine_MutateToTypeIfDifferent

	+TilesCloudsDec $200 , Mode7Regs0_ypos , TileScreen_ypos
!ifdef Mode7LayersEnable {
	+CloudsDec $206 , Mode7Regs1_ypos
	+CloudsDec $20c , Mode7Regs2_ypos
}

.notUp

	lda #JoystickBits_Down
	bit CIA1KeyboardColumnJoystickA
	beq .isDown
	jmp .notDown
.isDown

	+MoveAnimationsForBy AnimationEngine_posY , 1

	ldx playerAnimationIndex
	ldy #kAnimationType_playerRunDown
	jsr AnimationEngine_MutateToTypeIfDifferent

	+TilesCloudsInc $200 , Mode7Regs0_ypos , TileScreen_ypos
!ifdef Mode7LayersEnable {
	+CloudsInc $206 , Mode7Regs1_ypos
	+CloudsInc $20c , Mode7Regs2_ypos
}

.notDown

	lda #JoystickBits_Left
	bit CIA1KeyboardColumnJoystickA
	beq .isLeft
	jmp .notLeft
.isLeft

	+MoveAnimationsForBy AnimationEngine_posX , 1

	ldx playerAnimationIndex
	ldy #kAnimationType_playerRunLeft
	jsr AnimationEngine_MutateToTypeIfDifferent
	lda #0
	sta AnimationEngine_flips,x

	+TilesCloudsDec $200 , Mode7Regs0_xpos , TileScreen_xpos
!ifdef Mode7LayersEnable {
	+CloudsDec $206 , Mode7Regs1_xpos
	+CloudsDec $20c , Mode7Regs2_xpos
}

.notLeft

	lda #JoystickBits_Right
	bit CIA1KeyboardColumnJoystickA
	beq .isRight
	jmp .notRight
.isRight

	+MoveAnimationsForBy AnimationEngine_posX , -1

	ldx playerAnimationIndex
	ldy #kAnimationType_playerRunLeft
	jsr AnimationEngine_MutateToTypeIfDifferent
	lda #kAnimationEngine_flipX
	sta AnimationEngine_flips,x

	+TilesCloudsInc $200 , Mode7Regs0_xpos , TileScreen_xpos
!ifdef Mode7LayersEnable {
	+CloudsInc $206 , Mode7Regs1_xpos
	+CloudsInc $20c , Mode7Regs2_xpos
}

.notRight
	rts
