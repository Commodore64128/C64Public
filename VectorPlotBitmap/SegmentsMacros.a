; Check the structure will allow iny to be used instead of ldy #kSegment_offset_*
; Yes I should use MLA here
!if kSegment_offset_nextHi != kSegment_offset_nextLo+1 {
	!error "kSegment_offset_nextHi != kSegment_offset_nextLo+1"
}
!if kSegment_offset_right != kSegment_offset_left+1 {
	!error "kSegment_offset_right != kSegment_offset_left+1"
}
!if kSegment_offset_colour != kSegment_offset_right+1 {
	!error "kSegment_offset_colour != kSegment_offset_right+1"
}

!macro Segments_setLineHead {
	lda ZPSegments_currentSegmentLo
	sta Segments_linesLo,x
	lda ZPSegments_currentSegmentHi
	sta Segments_linesHi,x
}

!macro Segments_setLast {
	lda ZPSegments_currentSegmentLo
	sta ZPSegments_lastSegmentLo
	lda ZPSegments_currentSegmentHi
	sta ZPSegments_lastSegmentHi
}

!macro Segments_forgetLast {
	lda #0
	sta ZPSegments_lastSegmentLo
	sta ZPSegments_lastSegmentHi
}

!macro Segments_clearNextSegment {
	ldy #kSegment_offset_nextHi
	lda #0
	sta (ZPSegments_currentSegmentLo),y
}

!macro Segments_getNextSegment {
	ldy #kSegment_offset_nextLo
	lda (ZPSegments_currentSegmentLo),y
	pha
	iny
	lda (ZPSegments_currentSegmentLo),y
	sta ZPSegments_currentSegmentHi
	pla
	sta ZPSegments_currentSegmentLo
}

!macro Segments_addToLastSegmentNoNext {
	ldy #kSegment_offset_nextLo
	lda ZPSegments_currentSegmentLo
	sta (ZPSegments_lastSegmentLo),y
	; No next segment, but init last segment next pointer, hi only to save time
	iny
	lda #0
	sta (ZPSegments_currentSegmentLo),y
	lda ZPSegments_currentSegmentHi
	sta (ZPSegments_lastSegmentLo),y
}

!macro Segments_setLastSegmentToCurrentNext {
	ldy #kSegment_offset_nextLo
	lda ZPSegments_lastSegmentLo
	sta (ZPSegments_currentSegmentLo),y
	iny
	lda ZPSegments_lastSegmentHi
	sta (ZPSegments_currentSegmentLo),y
}

!macro Segments_addToLastSegment {
	ldy #kSegment_offset_nextLo
	lda ZPSegments_currentSegmentLo
	sta (ZPSegments_lastSegmentLo),y
	iny
	lda ZPSegments_currentSegmentHi
	sta (ZPSegments_lastSegmentLo),y
}

!macro Segments_copyPolyStartEndColour {
	ldy #kSegment_offset_left
	lda Poly_linesLeft,x
	sta (ZPSegments_currentSegmentLo),y
	iny
	lda Poly_linesRight,x
	sta (ZPSegments_currentSegmentLo),y
	iny
	lda ZPSegments_segmentColour
	sta (ZPSegments_currentSegmentLo),y
}

!macro Segments_copySegmentStartEndColour {
	ldy #kSegment_offset_left
	lda ZPSegments_segmentLeft
	sta (ZPSegments_currentSegmentLo),y
	iny
	lda ZPSegments_segmentRight
	sta (ZPSegments_currentSegmentLo),y
	iny
	lda ZPSegments_segmentColour
	sta (ZPSegments_currentSegmentLo),y
}

!macro Segments_currentToTemp {
	lda ZPSegments_currentSegmentLo
	sta ZPSegments_tempSegmentLo
	lda ZPSegments_currentSegmentHi
	sta ZPSegments_tempSegmentHi
}


!macro Segments_insertCurrentBeforeTemp {
	lda ZPSegments_lastSegmentHi
	bne .updateLast
	lda ZPSegments_currentSegmentLo
	sta Segments_linesLo,x
	lda ZPSegments_currentSegmentHi
	sta Segments_linesHi,x
	jmp .end
.updateLast
	ldy #kSegment_offset_nextLo
	lda ZPSegments_currentSegmentLo
	sta (ZPSegments_lastSegmentLo),y
	iny
	lda ZPSegments_currentSegmentHi
	sta (ZPSegments_lastSegmentLo),y
.end
	ldy #kSegment_offset_nextLo
	lda ZPSegments_tempSegmentLo
	sta (ZPSegments_currentSegmentLo),y
	iny
	lda ZPSegments_tempSegmentHi
	sta (ZPSegments_currentSegmentLo),y
}
