TapeTool TODO file started 12 September 2012
A tool to provide a command line interface that enables C64 format TAP files to be created with kernal and turbo data.
********************************************

*Instead of saving $ea31 into $314 to make it escape the block loader earlier, instead save $ea2f
This executes one extra instruction from the normal tape loader which should be $f92c
This means the IRQ executes $ea2f, which executes an illegal opcode NOOP $60,X (SKB #$60)
*Using $ea2c isn't really viable, it does kind of work but it goes through a nasty sequence of the BRK vector being hit by a mistaken RTS inside the IRQ.
*There is another option, save $022c. This will cause the loader at $f92c to be used until the second $02 byte is read. Then always have the start code at $022c, like a JMP.


Add the option to write files backwards or with random block placement or with some other ordering. Might be nice for loading screens. :)


Detect TinyHeader not being set and display a warning if "otft" is used on the command line asking if they are sure they want to use a tiny header file.


In the scroller loader add some extra prints to show what file it has found and what file it is loading.


When the "Extended header checksum check" is OK then add code that will:
Display the human readable information like filename byte and load/end address, expected number of blocks.
Also read the block bytes and then when the required number of bytes has been read it will go back to searching for the next header block.


Make it possible so that anyone without coding knowledge can produce tape turbo loaders.
Change the loading scheme, scroll text, loader picture, sprite(s).
Add more loader styles with various animations.
These options come from the command line.


Fix comment: Disable the short pulse calibration code for now, it doesn't work on all tapes.
Study the kernal logic and replicate it.


Add options to include special gaps that disrupt the ability of tape-to-tape audio copying.


*Add the option to assemble the Loader.a with input parameters for the type of turbo to use. It can modify the _config.a file.


Create some private functions to do the common operations.
Like writing a leadin or leadout.
