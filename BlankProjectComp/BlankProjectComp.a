;BlankProjectComp test code

!source "../stdlib/stdlib.a"
!to "BlankProjectComp.prg", cbm
!sl "BlankProjectComp.map"
!svl "BlankProjectComp.lbl"
!pdb "BlankProjectComp.pdb"
!cpu 6510
!ct pet

*=$400
	sei
	lda #ProcessorPortAllRAMWithIO
	jsr InitialiseMachine
	lda #VIC2ScreenControlVDefault
	sta VIC2ScreenControlV


!if 1 {
	ldx #0
.l1
	lda #100
.l2
	cmp $d012
	bne .l2
	inx
	txa
	and #7
	sta $d016

	lda #150
.l3
	cmp $d012
	bne .l3
	lda #0
	sta $d016
	jmp .l1
}

!if 0 {
	lda #(VIC2ScreenControlHDefault | %10000)
	sta VIC2ScreenControlH

	lda #VIC2Colour_Grey
	sta VIC2ExtraBackgroundColour1
	lda #VIC2Colour_LightGrey
	sta VIC2ExtraBackgroundColour2

	; Visual update
	inc .stuff
	; Trigger any watches
	inc $c000

.l1 jmp .l1

.stuff !by 0

}

!if 0 {
	ldx #7
.f0
	lda # ($700 / 64)
	sta SCREENRAM+SPRITEFRAMESCROFF,x
	txa
	sta VIC2Sprite0Colour,x
	asl
	tay
	lda #128
	sta VIC2Sprite0Y,y
.sm0	lda #VIC2SpriteXBorderLeft
	sta VIC2Sprite0X,y
	lda .sm0+1
	clc
	adc #VIC2SpriteSizeX
	sta .sm0+1
	dex
	bpl .f0

	lda #%11111111
	sta VIC2SpriteEnable
	lda #0
	sta VIC2SpriteMulticolour
	sta VIC2SpriteDoubleWidth

.l1
	inc VIC2BorderColour
	dec VIC2BorderColour
	jmp .l1

*=$700
!fill 63, 255
}

!source "../stdlib/Initialise.a"
